@Tutorial(time: 5) {
    @XcodeRequirement(title: "Xcode 16", destination: "https://developer.apple.com/download/applications/") 
    
    @Intro(title: "Purchase and subscription management") {
        Learn how to manage purchases and subscriptions. 
    }
    
    @Section(title: "Manage Purchases") {
        @ContentAndMedia {
            In this section we see how to allow the user to manage purchases.  
            
            @Image(source: "quickstart24.png", alt: "Manage purchases.")
        }
        
        @Steps {
            @Step {
                Allowing the user to manage purchases and subscriptions is easily accomplished using the same `SKHelperStoreView()`
                method we used in the 'Display all Products' part of this quick-start guide: simply pass the `allowManagement: true` parameter.
                
                Replace the content of **ContentView.swift** to enable our demo to display products, along with management options for non-consumable
                products that have been purchased.
                
                @Code(name: "ContentView.swift", file: "quickstart-contentview7.swift", reset: true) {}              
            }
            
            @Step {
                Build and run the demo app and you'll see that products that have been purchased display a **Manage Purchase** button. Unpurchased
                products display **Product Information** and **price** buttons.

                @Image(source: "quickstart24.png", alt: "Manage purchases.")              
            }
            

            @Step {
                Tapping the **Manage Purchase** button displays information about the purchase, such as the purchase date and price paid.
                
                @Image(source: "quickstart25.png", alt: "Manage purchases.")
            }
            
            @Step {
                Tapping the **Manage Purchase** button again allows the user to request a refund.
                
                @Image(source: "quickstart26.png", alt: "Manage purchases.")
            }            
        }
    }
    
    @Section(title: "Manage Subscriptions") {
        @ContentAndMedia {
            In this section we see how to allow the user to manage subscriptions.  
            
            @Image(source: "quickstart17.png", alt: "Manage Subscriptions.")
        }
        
        @Steps {
            @Step {
                Replace the contents of **ContentView.swift** with the following code.
                
                @Code(name: "ContentView.swift", file: "quickstart-contentview5.swift", reset: true) {}              
            }
            
            @Step {
                Build and run the app. Notice that by default SKHelper shows an **Info** button for subscriptions that you're not subscribed to.
                
                @Image(source: "quickstartxx.png", alt: "Manage Subscriptions.")
            }

            @Step {
                Subscribe to the **Silver** product. Notice that the **Info** button changes to a **Manage** button for the silver product.
                
                @Image(source: "quickstartxx.png", alt: "Manage Subscriptions.")
            }

            This concludes the **Quick Start** tutorial, but we've only scratched the surface of what you can do with **StoreKit** and **SKHelper**. Explore more resources for learning about `SKHelper`.

            - [Documentation landing page](https://russell-archer.github.io/SKHelper/documentation/skhelper)
            - [In-depth guide to in-app purchases and **SKHelper**](https://russell-archer.github.io/SKHelper/documentation/skhelper/guide)
            - [SKHelperDemo Xcode project](https://github.com/russell-archer/SKHelperDemo)
        }
    }    
}
