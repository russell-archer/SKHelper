{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper\/isPurchased(productId:)"},"abstract":[{"text":"Checks the current entitlement for ","type":"text"},{"code":"productId","type":"codeVoice"},{"text":" and returns true if the user is entitled to use the product,","type":"text"},{"text":" ","type":"text"},{"text":"false otherwise.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPurchased","kind":"identifier"},{"text":"(","kind":"text"},{"text":"productId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ProductId","preciseIdentifier":"s:8SKHelper9ProductIda","kind":"typeIdentifier","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/ProductId"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"productId","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ProductId","type":"codeVoice"},{"text":" to check.","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"inlineContent":[{"text":"Returns true if user is entitled to use the product, false otherwise.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is intended for consumable and non-comsumable products. If "},{"code":"productId","type":"codeVoice"},{"type":"text","text":" identifies an auto-renewable"},{"type":"text","text":" "},{"type":"text","text":"subscription then we redirect the call to "},{"code":"isSubscribed(productId)","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","text":"Notes on non-consumable products","level":2,"anchor":"Notes-on-non-consumable-products"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that the process of determining if a product is purchased can be unreliable. Calls to"},{"type":"text","text":" "},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":" mostly produce the correct result. However, in both the Xcode testing"},{"type":"text","text":" "},{"type":"text","text":"and live production environments it is quite common for "},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":" to erroneously"},{"type":"text","text":" "},{"type":"text","text":"return nil, indicating the user has not purchased the product."}]},{"type":"paragraph","inlineContent":[{"text":"Also, calling ","type":"text"},{"code":"Transaction.currentEntitlement(for:)","type":"codeVoice"},{"text":" can (seemingly randomly) result one of the following errors:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIDevice.current.identifierForVendor"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"AppStore.deviceVerificationID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Domain=ASDErrorDomain Code=500 “(null)”"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any of the above errors result in an invalid result for the current entitlement."}]},{"type":"paragraph","inlineContent":[{"text":"Because of theses inconsistencies we maintain a ","type":"text"},{"code":"SKHelperProduct","type":"codeVoice"},{"text":" collection which contains a cached value","type":"text"},{"text":" ","type":"text"},{"text":"for the user’s entitlement to use each product.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When checking the purchased state of a product we return true if "},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"text","text":"non-nil. If the result is nil then if "},{"type":"codeVoice","code":"useCachedEntitlements"},{"type":"text","text":" is true we return the value of "},{"type":"codeVoice","code":"SKHelperProduct.hasEntitlement"},{"type":"text","text":"."}]},{"type":"heading","text":"Notes on consumable products","level":2,"anchor":"Notes-on-consumable-products"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Consumables don’t have entitlements, so "},{"code":"Transaction.currentEntitlement(for:)","type":"codeVoice"},{"type":"text","text":" returns nil."},{"type":"text","text":" "},{"type":"text","text":"However, the following do return transactions for both finished and unfinished consumables in iOS18+ and macOS15+"},{"type":"text","text":" "},{"type":"text","text":"(you also need to add "},{"code":"SKIncludeConsumableInAppPurchaseHistory = YES","type":"codeVoice"},{"type":"text","text":" to your app’s info.plist file):"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"all"},{"type":"text","text":" sequence in "},{"type":"codeVoice","code":"Transaction"},{"type":"text","text":"  - returns the user’s complete transaction history"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"latest(for:)","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"Transaction","type":"codeVoice"},{"text":"  - returns the user’s most recent transaction for a specific product","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"latestTransaction"},{"type":"text","text":" in "},{"type":"codeVoice","code":"Product"},{"type":"text","text":" - returns the user’s most recent transaction for a specific product"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The user may purchase multiple instances of the same consumable product. However, "},{"type":"codeVoice","code":"SKHelper"},{"type":"text","text":" must call "},{"type":"codeVoice","code":"finish()"},{"type":"text","text":" on each consumable"},{"type":"text","text":" "},{"type":"text","text":"transaction as they happen, otherwise StoreKit prevents us from purchasing another instance (actually, the purchase appears to"},{"type":"text","text":" "},{"type":"text","text":"work, but StoreKit just resends the most recent transaction for that product and the user is not charged for a new purchase)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that we can’t tell if a consumable has “expired”, the host app must do this according to its own internal logic."}]},{"type":"paragraph","inlineContent":[{"text":"As far as telling if a consumable has been purchased, all we can do is see if there has been at least one historical purchase","type":"text"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"Product.product.latestTransaction","type":"codeVoice"},{"text":". We could use the ","type":"text"},{"code":"Transaction.all","type":"codeVoice"},{"text":" sequence to see how many purchases of the consumable","type":"text"},{"text":" ","type":"text"},{"text":"there have been, but that isn’t particularly useful.","type":"text"}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPurchased"},{"kind":"text","text":"("},{"kind":"externalParam","text":"productId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8SKHelper9ProductIda","text":"ProductId"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"externalID":"s:8SKHelperAAC11isPurchased9productIdSbSS_tYaF","role":"symbol","modules":[{"name":"SKHelper"}],"symbolKind":"method","title":"isPurchased(productId:)","roleHeading":"Instance Method","platforms":[{"unavailable":false,"name":"iOS","deprecated":false,"beta":false,"introducedAt":"17.0"},{"unavailable":false,"name":"macOS","deprecated":false,"beta":false,"introducedAt":"14.6"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SKHelper\/documentation\/SKHelper","doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/skhelper\/skhelper\/ispurchased(productid:)"]}],"sections":[],"references":{"doc://SKHelper/documentation/SKHelper":{"identifier":"doc:\/\/SKHelper\/documentation\/SKHelper","images":[{"type":"icon","identifier":"skhelper-logo-small.png"}],"title":"SKHelper","type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/skhelper","abstract":[{"type":"codeVoice","code":"SKHelper"},{"type":"text","text":" is a Swift Package Manager (SPM) package that enables developers using "},{"type":"strong","inlineContent":[{"type":"text","text":"Xcode 16"}]},{"type":"text","text":" to easily add in-app purchase"},{"type":"text","text":" "},{"type":"text","text":"support to "},{"type":"strong","inlineContent":[{"text":"iOS 17+","type":"text"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"text":"macOS 14.6+","type":"text"}]},{"type":"text","text":" SwiftUI apps."}]},"doc://SKHelper/documentation/SKHelper/SKHelper":{"role":"symbol","kind":"symbol","abstract":[{"text":"SKHelper, a lightweight StoreKit helper.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SKHelper","kind":"identifier"}],"title":"SKHelper","type":"topic","navigatorTitle":[{"text":"SKHelper","kind":"identifier"}],"url":"\/documentation\/skhelper\/skhelper","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper"},"doc://SKHelper/documentation/SKHelper/ProductId":{"navigatorTitle":[{"kind":"identifier","text":"ProductId"}],"url":"\/documentation\/skhelper\/productid","abstract":[{"type":"text","text":"The unique id that identifies a product."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/ProductId","title":"ProductId","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ProductId"}]},"doc://SKHelper/documentation/SKHelper/SKHelper/isPurchased(productId:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPurchased"},{"kind":"text","text":"("},{"kind":"externalParam","text":"productId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8SKHelper9ProductIda","text":"ProductId"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper\/isPurchased(productId:)","abstract":[{"text":"Checks the current entitlement for ","type":"text"},{"type":"codeVoice","code":"productId"},{"text":" and returns true if the user is entitled to use the product,","type":"text"},{"text":" ","type":"text"},{"text":"false otherwise.","type":"text"}],"role":"symbol","url":"\/documentation\/skhelper\/skhelper\/ispurchased(productid:)","title":"isPurchased(productId:)","type":"topic","kind":"symbol"},"skhelper-logo-small.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/SKHelper\/skhelper-logo-small.png"}],"identifier":"skhelper-logo-small.png","type":"image"}}}