{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/skhelper\/skhelper\/ispurchased(productid:)"]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SKHelper\/documentation\/SKHelper","doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper\/isPurchased(productId:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Checks the current entitlement for ","type":"text"},{"type":"codeVoice","code":"productId"},{"type":"text","text":" and returns true if the user is entitled to use the product,"},{"text":" ","type":"text"},{"type":"text","text":"false otherwise."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isPurchased","kind":"identifier"},{"text":"(","kind":"text"},{"text":"productId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ProductId","kind":"typeIdentifier","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/ProductId","preciseIdentifier":"s:8SKHelper9ProductIda"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ProductId"},{"type":"text","text":" to check."}]}],"name":"productId"}]},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"Returns true if user is entitled to use the product, false otherwise."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method is intended for consumable and non-comsumable products. If ","type":"text"},{"code":"productId","type":"codeVoice"},{"text":" identifies an auto-renewable","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"subscription then we redirect the call to "},{"type":"codeVoice","code":"isSubscribed(productId)"},{"type":"text","text":"."}]},{"type":"heading","text":"Notes on non-consumable products","anchor":"Notes-on-non-consumable-products","level":2},{"inlineContent":[{"type":"text","text":"Note that the process of determining if a product is purchased can be unreliable. Calls to"},{"type":"text","text":" "},{"code":"Transaction.currentEntitlement(for:)","type":"codeVoice"},{"type":"text","text":" mostly produce the correct result. However, in both the Xcode testing"},{"text":" ","type":"text"},{"type":"text","text":"and live production environments it is quite common for "},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":" to erroneously"},{"type":"text","text":" "},{"type":"text","text":"return nil, indicating the user has not purchased the product."}],"type":"paragraph"},{"inlineContent":[{"text":"Also, calling ","type":"text"},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":" can (seemingly randomly) result one of the following errors:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIDevice.current.identifierForVendor"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AppStore.deviceVerificationID"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Domain=ASDErrorDomain Code=500 “(null)”","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Any of the above errors result in an invalid result for the current entitlement."}]},{"type":"paragraph","inlineContent":[{"text":"Because of theses inconsistencies we maintain a ","type":"text"},{"code":"SKHelperProduct","type":"codeVoice"},{"type":"text","text":" collection which contains a cached value"},{"type":"text","text":" "},{"type":"text","text":"for the user’s entitlement to use each product."}]},{"inlineContent":[{"text":"When checking the purchased state of a product we return true if ","type":"text"},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"text":" returns","type":"text"},{"type":"text","text":" "},{"text":"non-nil. If the result is nil then if ","type":"text"},{"type":"codeVoice","code":"useCachedEntitlements"},{"type":"text","text":" is true we return the value of "},{"code":"SKHelperProduct.hasEntitlement","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"text":"Notes on consumable products","type":"heading","anchor":"Notes-on-consumable-products"},{"inlineContent":[{"type":"text","text":"Consumables don’t have entitlements, so "},{"code":"Transaction.currentEntitlement(for:)","type":"codeVoice"},{"type":"text","text":" returns nil."},{"text":" ","type":"text"},{"text":"However, the following do return transactions for both finished and unfinished consumables in iOS18+ and macOS15+","type":"text"},{"type":"text","text":" "},{"type":"text","text":"(you also need to add "},{"type":"codeVoice","code":"SKIncludeConsumableInAppPurchaseHistory = YES"},{"type":"text","text":" to your app’s info.plist file):"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"all"},{"type":"text","text":" sequence in "},{"type":"codeVoice","code":"Transaction"},{"type":"text","text":"  - returns the user’s complete transaction history"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"latest(for:)"},{"text":" in ","type":"text"},{"type":"codeVoice","code":"Transaction"},{"type":"text","text":"  - returns the user’s most recent transaction for a specific product"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"latestTransaction"},{"type":"text","text":" in "},{"type":"codeVoice","code":"Product"},{"type":"text","text":" - returns the user’s most recent transaction for a specific product"}]}]}]},{"inlineContent":[{"text":"The user may purchase multiple instances of the same consumable product. However, ","type":"text"},{"code":"SKHelper","type":"codeVoice"},{"type":"text","text":" must call "},{"type":"codeVoice","code":"finish()"},{"type":"text","text":" on each consumable"},{"type":"text","text":" "},{"text":"transaction as they happen, otherwise StoreKit prevents us from purchasing another instance (actually, the purchase appears to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"work, but StoreKit just resends the most recent transaction for that product and the user is not charged for a new purchase)."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Note that we can’t tell if a consumable has “expired”, the host app must do this according to its own internal logic.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As far as telling if a consumable has been purchased, all we can do is see if there has been at least one historical purchase"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"Product.product.latestTransaction","type":"codeVoice"},{"text":". We could use the ","type":"text"},{"code":"Transaction.all","type":"codeVoice"},{"text":" sequence to see how many purchases of the consumable","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"there have been, but that isn’t particularly useful."}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"isPurchased","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"productId"},{"text":": ","kind":"text"},{"text":"ProductId","kind":"typeIdentifier","preciseIdentifier":"s:8SKHelper9ProductIda"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isPurchased(productId:)","externalID":"s:8SKHelperAAC11isPurchased9productIdSbSS_tYaF","platforms":[{"beta":false,"introducedAt":"17.0","name":"iOS","unavailable":false,"deprecated":false},{"unavailable":false,"beta":false,"introducedAt":"14.6","name":"macOS","deprecated":false}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"SKHelper"}]},"references":{"doc://SKHelper/documentation/SKHelper/ProductId":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"ProductId","kind":"identifier"}],"url":"\/documentation\/skhelper\/productid","title":"ProductId","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/ProductId","abstract":[],"type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ProductId"}]},"doc://SKHelper/documentation/SKHelper":{"type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/skhelper","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper","title":"SKHelper","abstract":[{"type":"codeVoice","code":"SKHelper"},{"text":" is a Swift Package Manager (SPM) package that enables developers using ","type":"text"},{"inlineContent":[{"type":"text","text":"Xcode 16"}],"type":"strong"},{"text":" to easily add in-app purchase","type":"text"},{"type":"text","text":" "},{"type":"text","text":"support to "},{"inlineContent":[{"text":"iOS 17+","type":"text"}],"type":"strong"},{"type":"text","text":" and "},{"inlineContent":[{"text":"macOS 14.6+","type":"text"}],"type":"strong"},{"type":"text","text":" SwiftUI apps."}],"images":[{"identifier":"skhelper-logo-small.png","type":"icon"}]},"skhelper-logo-small.png":{"identifier":"skhelper-logo-small.png","type":"image","alt":null,"variants":[{"url":"\/images\/SKHelper\/skhelper-logo-small.png","traits":["1x","light"]}]},"doc://SKHelper/documentation/SKHelper/SKHelper/isPurchased(productId:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"isPurchased","kind":"identifier"},{"text":"(","kind":"text"},{"text":"productId","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8SKHelper9ProductIda","text":"ProductId","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","kind":"symbol","role":"symbol","title":"isPurchased(productId:)","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper\/isPurchased(productId:)","abstract":[{"type":"text","text":"Checks the current entitlement for "},{"type":"codeVoice","code":"productId"},{"text":" and returns true if the user is entitled to use the product,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"false otherwise."}],"url":"\/documentation\/skhelper\/skhelper\/ispurchased(productid:)"},"doc://SKHelper/documentation/SKHelper/SKHelper":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SKHelper","kind":"identifier"}],"abstract":[{"type":"text","text":"SKHelper, a lightweight StoreKit helper."}],"type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SKHelper"}],"identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper","title":"SKHelper","role":"symbol","url":"\/documentation\/skhelper\/skhelper"}}}