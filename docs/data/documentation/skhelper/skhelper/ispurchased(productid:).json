{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SKHelper\/documentation\/SKHelper","doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper\/isPurchased(productId:)"},"abstract":[{"text":"Checks the current entitlement for ","type":"text"},{"code":"productId","type":"codeVoice"},{"text":" and returns true if the user is entitled to use the product,","type":"text"},{"text":" ","type":"text"},{"text":"false otherwise.","type":"text"}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/skhelper\/skhelper\/ispurchased(productid:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPurchased"},{"kind":"text","text":"("},{"kind":"externalParam","text":"productId"},{"kind":"text","text":": "},{"identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/ProductId","preciseIdentifier":"s:8SKHelper9ProductIda","kind":"typeIdentifier","text":"ProductId"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"productId","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ProductId"},{"type":"text","text":" to check."}]}]}]},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returns true if user is entitled to use the product, false otherwise."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method is intended for consumable and non-comsumable products. If "},{"code":"productId","type":"codeVoice"},{"type":"text","text":" identifies an auto-renewable"},{"type":"text","text":" "},{"type":"text","text":"subscription then we redirect the call to "},{"code":"isSubscribed(productId)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Notes on non-consumable products","anchor":"Notes-on-non-consumable-products"},{"inlineContent":[{"text":"Note that the process of determining if a product is purchased can be unreliable. Calls to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"text":" mostly produce the correct result. However, in both the Xcode testing","type":"text"},{"text":" ","type":"text"},{"text":"and live production environments it is quite common for ","type":"text"},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"text":" to erroneously","type":"text"},{"text":" ","type":"text"},{"text":"return nil, indicating the user has not purchased the product.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Also, calling ","type":"text"},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"text":" can (seemingly randomly) result one of the following errors:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIDevice.current.identifierForVendor"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"AppStore.deviceVerificationID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Domain=ASDErrorDomain Code=500 “(null)”"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Any of the above errors result in an invalid result for the current entitlement.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Because of theses inconsistencies we maintain a "},{"type":"codeVoice","code":"SKHelperProduct"},{"type":"text","text":" collection which contains a cached value"},{"type":"text","text":" "},{"type":"text","text":"for the user’s entitlement to use each product."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When checking the purchased state of a product we return true if "},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":" returns"},{"type":"text","text":" "},{"type":"text","text":"non-nil. If the result is nil then if "},{"type":"codeVoice","code":"useCachedEntitlements"},{"type":"text","text":" is true we return the value of "},{"type":"codeVoice","code":"SKHelperProduct.hasEntitlement"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","level":2,"text":"Notes on consumable products","anchor":"Notes-on-consumable-products"},{"inlineContent":[{"type":"text","text":"Consumables don’t have entitlements, so "},{"type":"codeVoice","code":"Transaction.currentEntitlement(for:)"},{"type":"text","text":" returns nil."},{"type":"text","text":" "},{"type":"text","text":"However, the following do return transactions for both finished and unfinished consumables in iOS18+ and macOS15+"},{"type":"text","text":" "},{"type":"text","text":"(you also need to add "},{"type":"codeVoice","code":"SKIncludeConsumableInAppPurchaseHistory = YES"},{"type":"text","text":" to your app’s info.plist file):"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"all"},{"type":"text","text":" sequence in "},{"type":"codeVoice","code":"Transaction"},{"type":"text","text":"  - returns the user’s complete transaction history"}]}]},{"content":[{"inlineContent":[{"code":"latest(for:)","type":"codeVoice"},{"type":"text","text":" in "},{"code":"Transaction","type":"codeVoice"},{"type":"text","text":"  - returns the user’s most recent transaction for a specific product"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"latestTransaction","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"Product","type":"codeVoice"},{"text":" - returns the user’s most recent transaction for a specific product","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"The user may purchase multiple instances of the same consumable product. However, "},{"type":"codeVoice","code":"SKHelper"},{"type":"text","text":" must call "},{"type":"codeVoice","code":"finish()"},{"type":"text","text":" on each consumable"},{"type":"text","text":" "},{"type":"text","text":"transaction as they happen, otherwise StoreKit prevents us from purchasing another instance (actually, the purchase appears to"},{"type":"text","text":" "},{"type":"text","text":"work, but StoreKit just resends the most recent transaction for that product and the user is not charged for a new purchase)."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note that we can’t tell if a consumable has “expired”, the host app must do this according to its own internal logic."}],"type":"paragraph"},{"inlineContent":[{"text":"As far as telling if a consumable has been purchased, all we can do is see if there has been at least one historical purchase","type":"text"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"type":"codeVoice","code":"Product.product.latestTransaction"},{"text":". We could use the ","type":"text"},{"type":"codeVoice","code":"Transaction.all"},{"text":" sequence to see how many purchases of the consumable","type":"text"},{"text":" ","type":"text"},{"text":"there have been, but that isn’t particularly useful.","type":"text"}],"type":"paragraph"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPurchased","kind":"identifier"},{"text":"(","kind":"text"},{"text":"productId","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ProductId","kind":"typeIdentifier","preciseIdentifier":"s:8SKHelper9ProductIda"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"platforms":[{"name":"iOS","deprecated":false,"unavailable":false,"introducedAt":"17.0","beta":false},{"name":"macOS","deprecated":false,"unavailable":false,"introducedAt":"14.6","beta":false}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"SKHelper"}],"externalID":"s:8SKHelperAAC11isPurchased9productIdSbSS_tYaF","title":"isPurchased(productId:)"},"references":{"doc://SKHelper/documentation/SKHelper/SKHelper":{"url":"\/documentation\/skhelper\/skhelper","type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SKHelper","kind":"identifier"}],"title":"SKHelper","abstract":[{"text":"SKHelper, a lightweight StoreKit helper.","type":"text"}],"identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper","kind":"symbol","navigatorTitle":[{"text":"SKHelper","kind":"identifier"}]},"skhelper-logo-small.png":{"type":"image","alt":null,"identifier":"skhelper-logo-small.png","variants":[{"url":"\/images\/SKHelper\/skhelper-logo-small.png","traits":["1x","light"]}]},"doc://SKHelper/documentation/SKHelper/SKHelper/isPurchased(productId:)":{"abstract":[{"text":"Checks the current entitlement for ","type":"text"},{"code":"productId","type":"codeVoice"},{"text":" and returns true if the user is entitled to use the product,","type":"text"},{"text":" ","type":"text"},{"text":"false otherwise.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/SKHelper\/isPurchased(productId:)","url":"\/documentation\/skhelper\/skhelper\/ispurchased(productid:)","title":"isPurchased(productId:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPurchased"},{"kind":"text","text":"("},{"kind":"externalParam","text":"productId"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ProductId","preciseIdentifier":"s:8SKHelper9ProductIda"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic"},"doc://SKHelper/documentation/SKHelper/ProductId":{"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ProductId","kind":"identifier"}],"navigatorTitle":[{"text":"ProductId","kind":"identifier"}],"identifier":"doc:\/\/SKHelper\/documentation\/SKHelper\/ProductId","url":"\/documentation\/skhelper\/productid","abstract":[{"text":"The unique id that identifies a product.","type":"text"}],"title":"ProductId"},"doc://SKHelper/documentation/SKHelper":{"url":"\/documentation\/skhelper","images":[{"identifier":"skhelper-logo-small.png","type":"icon"}],"type":"topic","title":"SKHelper","abstract":[{"type":"codeVoice","code":"SKHelper"},{"text":" is a Swift Package Manager (SPM) package that enables developers using ","type":"text"},{"inlineContent":[{"text":"Xcode 16","type":"text"}],"type":"strong"},{"text":" to easily add in-app purchase","type":"text"},{"text":" ","type":"text"},{"text":"support to ","type":"text"},{"inlineContent":[{"text":"iOS 17+","type":"text"}],"type":"strong"},{"text":" and ","type":"text"},{"inlineContent":[{"type":"text","text":"macOS 14.6+"}],"type":"strong"},{"text":" SwiftUI apps.","type":"text"}],"identifier":"doc:\/\/SKHelper\/documentation\/SKHelper","kind":"symbol","role":"collection"}}}